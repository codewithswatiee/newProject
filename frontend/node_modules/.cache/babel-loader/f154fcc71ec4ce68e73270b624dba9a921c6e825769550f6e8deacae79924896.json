{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\swati\\\\OneDrive\\\\Desktop\\\\newProject\\\\frontend\\\\src\\\\App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage               DONE\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage         DONE\n// 3. Add a root layout that adds the <MainNavigation> component above all page components      DONE\n// 4. Add properly working links to the MainNavigation              DONE\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active       DONE\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { createBrowserRouter } from 'react-router-dom';\nimport { RouterProvider } from 'react-router-dom';\nimport EditEvent from './pages/EditEvent';\nimport EventDetail from './pages/EventDetail';\nimport Events from './pages/Events';\nimport HomePage from './pages/HomePage';\nimport NewEvent from './pages/NewEvent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const router = createBrowserRouter([{\n    path: '/',\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }, this),\n    children: [{\n      path: '/events',\n      element: /*#__PURE__*/_jsxDEV(Events, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 36\n      }, this)\n    }, {\n      path: '/events/:id',\n      element: /*#__PURE__*/_jsxDEV(EventDetail, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 40\n      }, this)\n    }, {\n      path: '/events/new',\n      element: /*#__PURE__*/_jsxDEV(NewEvent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 40\n      }, this)\n    }, {\n      path: '/events/:id/edit',\n      element: /*#__PURE__*/_jsxDEV(EditEvent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 45\n      }, this)\n    }]\n  }]);\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","EditEvent","EventDetail","Events","HomePage","NewEvent","jsxDEV","_jsxDEV","App","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["C:/Users/swati/OneDrive/Desktop/newProject/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\r\n\r\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\r\n//    - HomePage\r\n//    - EventsPage\r\n//    - EventDetailPage\r\n//    - NewEventPage\r\n//    - EditEventPage               DONE\r\n// 2. Add routing & route definitions for these five pages\r\n//    - / => HomePage\r\n//    - /events => EventsPage\r\n//    - /events/<some-id> => EventDetailPage\r\n//    - /events/new => NewEventPage\r\n//    - /events/<some-id>/edit => EditEventPage         DONE\r\n// 3. Add a root layout that adds the <MainNavigation> component above all page components      DONE\r\n// 4. Add properly working links to the MainNavigation              DONE\r\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active       DONE\r\n// 6. Output a list of dummy events to the EventsPage\r\n//    Every list item should include a link to the respective EventDetailPage\r\n// 7. Output the ID of the selected event on the EventDetailPage\r\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\r\n\r\n\r\nimport { createBrowserRouter } from 'react-router-dom';\r\nimport { RouterProvider } from 'react-router-dom';\r\nimport EditEvent from './pages/EditEvent';\r\nimport EventDetail from './pages/EventDetail';\r\nimport Events from './pages/Events';\r\nimport HomePage from './pages/HomePage';\r\nimport NewEvent from './pages/NewEvent';\r\n\r\nfunction App() {\r\n  const router = createBrowserRouter([\r\n    {\r\n      path: '/',\r\n      element: <HomePage />,\r\n      children: [\r\n        {path: '/events', element: <Events />},\r\n        {path: '/events/:id', element: <EventDetail />},\r\n        {path: '/events/new', element: <NewEvent />},\r\n        {path: '/events/:id/edit', element: <EditEvent />},\r\n      ]\r\n    }\r\n  ])\r\n  return(\r\n    <RouterProvider router={router}></RouterProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASA,mBAAmB,QAAQ,kBAAkB;AACtD,SAASC,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,OAAOC,MAAM,MAAM,gBAAgB;AACnC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,QAAQ,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EACb,MAAMC,MAAM,GAAGV,mBAAmB,CAAC,CACjC;IACEW,IAAI,EAAE,GAAG;IACTC,OAAO,eAAEJ,OAAA,CAACH,QAAQ;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IACrBC,QAAQ,EAAE,CACR;MAACN,IAAI,EAAE,SAAS;MAAEC,OAAO,eAAEJ,OAAA,CAACJ,MAAM;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,CAAC,EACtC;MAACL,IAAI,EAAE,aAAa;MAAEC,OAAO,eAAEJ,OAAA,CAACL,WAAW;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,CAAC,EAC/C;MAACL,IAAI,EAAE,aAAa;MAAEC,OAAO,eAAEJ,OAAA,CAACF,QAAQ;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,CAAC,EAC5C;MAACL,IAAI,EAAE,kBAAkB;MAAEC,OAAO,eAAEJ,OAAA,CAACN,SAAS;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,CAAC;EAEtD,CAAC,CACF,CAAC;EACF,oBACER,OAAA,CAACP,cAAc;IAACS,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAiB,CAAC;AAErD;AAACE,EAAA,GAhBQT,GAAG;AAkBZ,eAAeA,GAAG;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}